---
- name: Installing Gogs
  hosts: localhost
  connection: local
  vars:
     - gogs_url_install: http://gogs.cloudapps.example.com/install
     - gogs_username: gogs
     - gogs_password: gogs
     - gogs_admin_email: admin@gogs.com
     - gogs_database_type: PostgreSQL
     - gogs_application_name: "Gogs: Go Git Service"
     - gogs_repository_path: /home/gogs/gogs-repositories
     - gogs_application_url: "http://gogs.cloudapps.example.com/"
     - namespace: tool
  tasks:

     - name: Retrieving Gogs Database's Username
       command: oc get deploymentconfig/postgresql-gogs -o jsonpath="{.spec.template.spec.containers[*].env[?(@.name==\"POSTGRESQL_USER\")].value}" --namespace {{ namespace }}
       register: gogs_database_username

     - name: Retrieving Gogs Database's Password
       command: oc get deploymentconfig/postgresql-gogs -o jsonpath="{.spec.template.spec.containers[*].env[?(@.name==\"POSTGRESQL_PASSWORD\")].value}" --namespace {{ namespace }}
       register: gogs_database_password

     - name: Retrieving Gogs Database's Name
       command: oc get deploymentconfig/postgresql-gogs -o jsonpath="{.spec.template.spec.containers[*].env[?(@.name==\"POSTGRESQL_DATABASE\")].value}" --namespace {{ namespace }}
       register: gogs_database_name

     - name: Retrieving Gogss Database's IP
       command: oc get service/postgresql-gogs --output template --template "{{ '{{' }}.spec.clusterIP{{ '}}' }}" --namespace {{ namespace }}
       register: gogs_database_ip

     - name: Retrieving Gog's Port Number
       command: oc get service/postgresql-gogs --output jsonpath="{.spec.ports.*.port}" --namespace {{ namespace }}
       register: gogs_database_port

     - debug: msg="Username{{ ":" }} {{ gogs_database_username.stdout }} Password {{ gogs_database_password.stdout }} Name {{ gogs_database_name.stdout }} IP {{ gogs_database_ip.stdout }} Port {{ gogs_database_port.stdout }}"

     - debug: msg="Body{{ ":" }} db_type={{ gogs_database_type | urlencode }}&db_host={{ gogs_database_ip.stdout | urlencode }}%3A{{ gogs_database_port.stdout }}&db_user={{ gogs_database_username.stdout }}&db_passwd={{ gogs_database_password.stdout }}&db_name={{ gogs_database_name.stdout | urlencode }}&ssl_mode=disable&db_path=data%2Fgogs.db&app_name={{ gogs_application_name | urlencode }}&repo_root_path={{ gogs_repository_path | urlencode }}&run_user=gogs&domain=localhost&ssh_port=22&http_port=3000&app_url={{ gogs_application_url | urlencode }}&log_root_path=%2Fopt%2Fgogs%2Flog&admin_name={{ gogs_username | urlencode }}&admin_passwd={{ gogs_password | urlencode }}&admin_confirm_passwd={{ gogs_password | urlencode }}&admin_email={{ gogs_admin_email | urlencode }}"

     - name: Installing Gogs for the very first time
       uri: method=POST HEADER_Content-type="application/x-www-form-urlencoded" url="{{ gogs_url_install }}"
            body="db_type={{ gogs_database_type | urlencode }}&db_host={{ gogs_database_ip.stdout | urlencode }}%3A{{ gogs_database_port.stdout }}&db_user={{ gogs_database_username.stdout }}&db_passwd={{ gogs_database_password.stdout }}&db_name={{ gogs_database_name.stdout | urlencode }}&ssl_mode=disable&db_path=data%2Fgogs.db&app_name={{ gogs_application_name | urlencode }}&repo_root_path={{ gogs_repository_path | urlencode }}&run_user=gogs&domain=localhost&ssh_port=22&http_port=3000&app_url={{ gogs_application_url | urlencode }}&log_root_path=%2Fopt%2Fgogs%2Flog&admin_name={{ gogs_username | urlencode }}&admin_passwd={{ gogs_password | urlencode }}&admin_confirm_passwd={{ gogs_password | urlencode }}&admin_email={{ gogs_admin_email | urlencode }}"
       register: result_install

     - debug: var=result_install 




